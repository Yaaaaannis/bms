/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: lukedew99 (https://sketchfab.com/lukedew99)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/tshirt-493ccd4e2b6a443c87ba4264fe7cadfa
Title: Tshirt
*/

import React, { useRef, useState, useEffect, useMemo } from 'react'
import { useGLTF } from '@react-three/drei'
import { useFrame } from '@react-three/fiber'
import * as THREE from 'three'

export function Model({ modalView = false, modelPath, hoverColor = '#ff0000', ...props }) {
  const { scene } = useGLTF(modelPath)
  const groupRef = useRef()
  const [hovered, setHovered] = useState(false)
  
  const clonedScene = useMemo(() => scene.clone(true), [scene])
  
  const targetRotation = useRef(0)
  const initialRotation = useRef(0)
  const targetScale = useRef(1)
  
  useEffect(() => {
    if (modelPath.includes('maillot.glb')) {
      clonedScene.rotation.y = Math.PI
    }
  }, [modelPath, clonedScene])
  
  useFrame((state, delta) => {
    if (!groupRef.current) return
    
    if (modalView) {
      const mouseX = state.mouse.x * Math.PI / 4
      const mouseY = state.mouse.y * Math.PI / 6
      
      const targetRotationY = THREE.MathUtils.clamp(mouseX, -Math.PI / 4, Math.PI / 4)
      const targetRotationX = THREE.MathUtils.clamp(mouseY, -Math.PI / 6, Math.PI / 6)
      
      groupRef.current.rotation.y += (targetRotationY - groupRef.current.rotation.y) * 0.05
      groupRef.current.rotation.x += (targetRotationX - groupRef.current.rotation.x) * 0.05
    } else if (hovered) {
      targetRotation.current += delta * 2
      targetScale.current = 1.09
      
      groupRef.current.rotation.y += (targetRotation.current - groupRef.current.rotation.y) * 0.1
      groupRef.current.scale.x += (targetScale.current - groupRef.current.scale.x) * 0.1
      groupRef.current.scale.y += (targetScale.current - groupRef.current.scale.y) * 0.1
      groupRef.current.scale.z += (targetScale.current - groupRef.current.scale.z) * 0.1
    } else {
      targetRotation.current = initialRotation.current
      targetScale.current = 1
      
      groupRef.current.rotation.y += (targetRotation.current - groupRef.current.rotation.y) * 0.1
      groupRef.current.scale.x += (targetScale.current - groupRef.current.scale.x) * 0.1
      groupRef.current.scale.y += (targetScale.current - groupRef.current.scale.y) * 0.1
      groupRef.current.scale.z += (targetScale.current - groupRef.current.scale.z) * 0.1
    }

    clonedScene.traverse((child) => {
      if (child.isMesh && child.material) {
        child.material.color = new THREE.Color(hovered && !modalView ? hoverColor : '#ffffff')
      }
    })
  })

  return (
    <group 
      ref={groupRef}
      {...props} 
      dispose={null}
      onPointerEnter={(e) => {
        if (!modalView) {
          setHovered(true)
          document.body.style.cursor = 'pointer'
        }
      }}
      onPointerLeave={(e) => {
        if (!modalView) {
          setHovered(false)
          document.body.style.cursor = 'auto'
        }
      }}
    >
      <primitive object={clonedScene} />
    </group>
  )
}

useGLTF.preload('/models/maillot.glb')
